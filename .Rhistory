dir.create("dataquiz")
}
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./dataquiz/uscommunities.csv", method = "curl")
list.files("./dataquiz")
if (!file.exists("dataquiz")){
dir.create("dataquiz")
}
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./dataquiz/uscommunities.csv", method = "curl")
list.files("./dataquiz")
if (!file.exists("dataquiz")){
dir.create("dataquiz")
}
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./dataquiz/uscommunities.csv", method = "curl")
if (!file.exists("dataquiz")){
dir.create("dataquiz")
}
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./dataquiz/uscommunities.csv", method = "curl")
list.files("./dataquiz")
head(communityData)
if (!file.exists("dataquiz")){
dir.create("dataquiz")
}
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./dataquiz/uscommunities.csv", method = "curl")
list.files("./dataquiz")
communityData<-read.table("./dataquiz/uscommunities.csv",sep=",", header=TRUE)
head(communityData)
bye()
if (!file.exists("dataquiz")){
dir.create("dataquiz")
}
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./dataquiz/uscommunities.csv", method = "curl")
list.files("./dataquiz")
communityData<-read.table("./dataquiz/uscommunities.csv",sep=",", header=TRUE)
head(communityData)
communityData(VAL=="24")
communityData[communityData$VAL=="24",]
tables()
communityData
DT<-communityData
DT(1)
DT[1]
DT[,36]
DT[,35]
DT[,38]
DT[,39]
DT[,37]
DT[DT$v37=="24"]
DT[DT$v37=="24",]
DT[DT$37v=="24",]
if (!file.exists("dataquiz")){
dir.create("dataquiz")
}
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./dataquiz/uscommunities.csv", method = "curl")
list.files("./dataquiz")
DT<-data.table(read.table("./dataquiz/uscommunities.csv",sep=",", header=TRUE))
head(DT)
if (!file.exists("dataquiz")){
dir.create("dataquiz")
}
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./dataquiz/uscommunities.csv", method = "curl")
list.files("./dataquiz")
DT<-data.table(read.csv("./dataquiz/uscommunities.csv"))
head(DT)
if (!file.exists("dataquiz")){
dir.create("dataquiz")
}
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./dataquiz/uscommunities.csv", method = "curl")
list.files("./dataquiz")
DT<-data.table(read.csv("./dataquiz/uscommunities.csv"))
setkey(DT,VAL)
DT[.,.N,by=VAL]
if (!file.exists("dataquiz")){
dir.create("dataquiz")
}
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./dataquiz/uscommunities.csv", method = "curl")
list.files("./dataquiz")
DT<-data.table(read.csv("./dataquiz/uscommunities.csv"))
setkey(DT,VAL)
DT[,.N,by=VAL]
if (!file.exists("dataquiz")){
dir.create("dataquiz")
}
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl, destfile = "./dataquiz/gov_NGAP.xlsx", method = "curl")
list.files("./dataquiz")
DT<-data.table(read.data("./dataquiz/gov_NGAP.xlsx"))
DT[c(18,23),c(7,15)]
if (!file.exists("dataquiz")){
dir.create("dataquiz")
}
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl, destfile = "./dataquiz/gov_NGAP.xlsx", method = "curl")
list.files("./dataquiz")
DT<-data.table(read.data("./dataquiz/gov_NGAP.xlsx"),sep=",", header=TRUE)
DT[c(18,23),c(7,15)]
read.xlsx
install.packages("read.xlsx")
if (!file.exists("dataquiz")){
dir.create("dataquiz")
}
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl, destfile = "./dataquiz/gov_NGAP.xlsx", method = "curl")
list.files("./dataquiz")
colIndex<-7:15
rowIndex<-19:25
dat<-read.xlsx("./dataquiz/gov_NGAP.xlsx",sheetIndex=1, colIndex = colIndex, rowIndex = rowIndex)
dat
install.packages("xlsx")
library(xlsx)
if (!file.exists("dataquiz")){
dir.create("dataquiz")
}
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl, destfile = "./dataquiz/gov_NGAP.xlsx", method = "curl")
list.files("./dataquiz")
colIndex<-7:15
rowIndex<-19:25
dat<-read.xlsx("./dataquiz/gov_NGAP.xlsx",sheetIndex=1, colIndex = colIndex, rowIndex = rowIndex)
dat
colIndex<-7:15
rowIndex<-18:23
dat<-read.xlsx("./dataquiz/gov_NGAP.xlsx",sheetIndex=1, colIndex = colIndex, rowIndex = rowIndex)
dat
colIndex<-7:15
rowIndex<-18:23
dat<-read.xlsx("./dataquiz/gov_NGAP.xlsx",sheetIndex=1, colIndex = colIndex, rowIndex = rowIndex)
dat
sum(dat$Zip*dat$Ext,na.rm=T)
if (!file.exists("dataquiz")){
dir.create("dataquiz")
}
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl, destfile = "./dataquiz/gov_NGAP.xlsx", method = "curl")
list.files("./dataquiz")
colIndex<-7:15
rowIndex<-18:23
dat<-read.xlsx("./dataquiz/gov_NGAP.xlsx",sheetIndex=1, colIndex = colIndex, rowIndex = rowIndex)
dat
sum(dat$Zip*dat$Ext,na.rm=T)
if (!file.exists("dataquiz")){
dir.create("dataquiz")
}
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl, destfile = "./dataquiz/gov_NGAP.xlsx", method = "curl")
list.files("./dataquiz")
colIndex<-7:15
rowIndex<-18:23
dat<-read.xlsx("./dataquiz/gov_NGAP.xlsx",sheetIndex=1, colIndex = colIndex, rowIndex = rowIndex)
dat
sum(dat$Zip*dat$Ext,na.rm=T)
install.packages("RMySQL")
library(RMySQL)
library(RMySQL)
library(DBI)
library()
ucscDb <- dbConnect(MySQL(),user="genome",
host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases;"); dbDisconnect(ucscDb);
result
allTables[1:5]
hg19 <- dbConnect(MySQL(),user="genome", db="hg19",
host="genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
length(allTables)
allTables[1:5]
dbListFields(hg19,"affyU133Plus2")
dbGetQuery(hg19, "select count(*) from affyU133Plus2")
affyData <- dbReadTable(hg19, "affyU133Plus2")
head(affyData)
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis <- fetch(query); quantile(affyMis$misMatches)
affyMisSmall <- fetch(query,n=10); dbClearResult(query);
dim(affyMisSmall)
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis <- fetch(query); quantile(affyMis$misMatches)
affyMisSmall <- fetch(query,n=10); dbClearResult(query);
dim(affyMisSmall)
dbDisconnect(hg19)
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created = h5createFile("example.h5")
created
?oauth_endpoints
??oauth_endpoints
?oauth_app
??oauth_app
??config
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth
#   One of the following endpoints: linkedin, twitter, vimeo, google, facebook, github, azure.
oauth_endpoints("github")
# 2. To make your own application, register at
#    https://github.com/settings/developers. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "b36af7fbdfe4cd38654b",
secret = "98234e0018e96f2091798144036571d2255339ce")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
??httpuv
install.packages("httpuv")
content(req)
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
json2[1,1:4']
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth
#   One of the following endpoints: linkedin, twitter, vimeo, google, facebook, github, azure.
oauth_endpoints("github")
# 2. To make your own application, register at
#    https://github.com/settings/developers. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "b36af7fbdfe4cd38654b",
secret = "98234e0018e96f2091798144036571d2255339ce")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
json1=content(req)
json2=jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
# OR:
#req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
#stop_for_status(req)
#content(req)
exists()
sasa
as
as
d
sad
sadas
dend
end
end()
e
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth
#   One of the following endpoints: linkedin, twitter, vimeo, google, facebook, github, azure.
oauth_endpoints("github")
# 2. To make your own application, register at
#    https://github.com/settings/developers. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "b36af7fbdfe4cd38654b",
secret = "98234e0018e96f2091798144036571d2255339ce")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
json1=content(req)
json2=jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
# OR:
#req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
#stop_for_status(req)
#content(req)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
repo_list<-content(req)
repo_list
repo_list[1]
length(repo_list)
View(repo_list)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
repo_list<-content(req)
repo_list[15]$created_at
repo_list[15]
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth
#   One of the following endpoints: linkedin, twitter, vimeo, google, facebook, github, azure.
oauth_endpoints("github")
# 2. To make your own application, register at
#    https://github.com/settings/developers. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "b36af7fbdfe4cd38654b",
secret = "98234e0018e96f2091798144036571d2255339ce")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
repo_list<-content(req)
answer<-repo_list[15]$created_at
answer$created_at
# OR:
#req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
#stop_for_status(req)
#content(req)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
repo_list<-content(req)
answer<-repo_list[15]$created_at
answer$created_at
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
repo_list<-content(req)
answer<-repo_list[[15]]$created_at
answer$created_at
repo_list[[15]]
repo_list[[15]]$created_at
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
repo_list<-content(req)
repo_list[[15]]$created_at
install.packages("sqldf")
library(sqldf)
# install.packages("sqldf")
library("sqldf")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
f <- file.path(getwd(), "ss06pid.csv")
download.file(url, f)
acs <- data.table::data.table(read.csv(f))
# Answer:
query1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
acs <- read.csv(f)
# install.packages("sqldf")
library("sqldf")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
f <- file.path(getwd(), "quiz2data.csv")
download.file(url, f)
acs <- read.csv(f)
# Answer:
query1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
head(acs)
detach("package:RMySQL", unload=TRUE)
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
sqldf("select pwgtp1 from acs where AGEP < 50")
# install.packages("sqldf")
library("sqldf")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
f <- file.path(getwd(), "quiz2data.csv")
download.file(url, f)
acs <- read.csv(f)
# Answer:
sqldf("select pwgtp1 from acs where AGEP < 50")
unique(acs$AGEP)
sqldf("select distinct AGEP from acs")
sqldf("select AGEP where unique from acs")
sqldf("select unique AGEP from acs")
sqldf("select distinct pwgtp1 from acs")
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
close(con)
htmlCode
htmlCode[180]
htmlCode[100]
nchar(htmlCode[100], type = "chars", allowNA = FALSE, keepNA = NA)
nchar(htmlCode[c(10,20,30,100)], type = "chars", allowNA = FALSE, keepNA = NA)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
close(con)
nchar(htmlCode[c(10,20,30,100)], type = "chars", allowNA = FALSE, keepNA = NA)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
f <- file.path(getwd(), "quiz2ques5data.for")
download.file(url, f)
dt <- read.data(f)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
f <- file.path(getwd(), "quiz2ques5data.for")
download.file(url, f)
dt <- read.table(f)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
f <- file.path(getwd(), "quiz2ques5data.for")
download.file(url, f)
dt <- read.table(f, sep="", header=TRUE)
dt <- read.table(f, sep=",", header=TRUE)
dt <- read.fwf(f, widths, sep=" ", as.is = FALSE, skip = 0, row.names, col.names)
??read.fwf
dt <- read.fwf(f, 30, sep=" ", as.is = FALSE, skip = 0, row.names, col.names)
dt <- read.fwf(f, skip=4,
widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4), sep=" ", as.is = FALSE, skip = 0, row.names, col.names)
df <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
widths=c(-1, 9, -5, 4, 4, -5, 4, 4, -5, 4, 4, -5, 4, 4),
skip=4
)
head(df)
df[1][1]
df[4]
sum(df[4])
head(df)
head(df(4))
head(df[4])
df <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
widths=c(-1, 9, -5, 4, 4, -5, 4, 4, -5, 4, 4, -5, 4, 4),
skip=4
)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
f <- file.path(getwd(), "quiz2ques5data.for")
download.file(url, f)
df <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
widths=c(-1, 9, -5, 4, 4, -5, 4, 4, -5, 4, 4, -5, 4, 4),
skip=4
)
df <- read.fwf(file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
+  widths=c(-1, 9, -5, 4, 4, -5, 4, 4, -5, 4, 4, -5, 4, 4),
+  skip=4
+)
df <- read.fwf(file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"), widths=c(-1, 9, -5, 4, 4, -5, 4, 4, -5, 4, 4, -5, 4, 4), skip=4)
f <- file.path(getwd(), "quiz2ques5data.for")
df <- read.fwf(file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"), widths=c(-1, 9, -5, 4, 4, -5, 4, 4, -5, 4, 4, -5, 4, 4), skip=4)
df <- read.fwf(file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"), widths=c(-1, 9, -5, 4, 4, -5, 4, 4, -5, 4, 4, -5, 4, 4), skip=4)
df <- read.fwf(f, widths=c(-1, 9, -5, 4, 4, -5, 4, 4, -5, 4, 4, -5, 4, 4), skip=4)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
f <- file.path(getwd(), "quiz2ques5data.for")
download.file(url, f)
df <- read.fwf(f, widths=c(-1, 9, -5, 4, 4, -5, 4, 4, -5, 4, 4, -5, 4, 4), skip=4)
head(df)
df[4]
head(df)
head(df[4])
head(df[,4])
sum(df[,4])
sum(df[,4])
getwd
getwd()
setwd("D:/COURSERA/Git_Local_Repo/ExData_Plotting1")
?strptime
FullTimeDate <- strptime(paste(pdata$Date, pdata$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
#remove all previous objects from the current workspace
rm(list = ls())
#Read full data
fullpdata<-read.table("./data/household_power_consumption.txt", sep = ";", header = TRUE, na.strings = "?")
head(fullpdata)
#convert date format
fullpdata$Date<-as.Date(fullpdata$Date, format="%d/%m/%Y")
#generate a subset with related data
pdata<-subset(fullpdata, (Date>="2007-02-01"& Date<= "2007-02-02"))
#we dont need full table anymore
rm(fullpdata)
#generate a png file
png(file="plot1.png")
#plot
with(pdata, plot(Global_active_power~day col = "red", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)"),ylab="Frequency")
#close device
dev.off()
FullTimeDate <- strptime(paste(pdata$Date, pdata$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
head
head(FullTimeDate)
FullTimeDate <- strptime(paste(pdata$Date, pdata$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
FullTimeDate
FullTimeDate <- strptime(paste(pdata$Date, pdata$Time), "%d/%m/%Y %H:%M:%S")
head(FullTimeDate)
head(pdata)
?timestamp
timeInfo<-c(pdata$Date, pdata$Time)
head(timeInfo)
as.POSIXct(paste(pdata$Date, pdata$Time), format="%Y-%m-%d %H:%M:%S")
timedata<-strptime(as.POSIXct(paste(pdata$Date, pdata$Time), format="%Y-%m-%d %H:%M:%S"), format="%Y-%m-%d %H:%M:%S)
)
)
)
:
;
...
.gvjhvghnc
fg
fg
xcb
cv
b
vcbexit
)
()
(((())))
end
